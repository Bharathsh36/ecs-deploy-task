name: 'Amazon ECS "Deploy Task Definition" Action for GitHub Actions'
description: "Registers an Amazon ECS task definition, and deploys it to an ECS service"
inputs:
  task-definition:
    description: "The path to the ECS task definition file to register"
    required: true
  service:
    description: "The name of the ECS service to deploy to. The action will only register the task definition if no service is given."
    required: false
  cluster:
    description: "The name of the ECS service's cluster.  Will default to the 'default' cluster"
    required: false
  wait-for-service-stability:
    description: 'Whether to wait for the ECS service to reach stable state after deploying the new task definition. Valid value is "true". Will default to not waiting.'
    required: false
  wait-for-minutes:
    description: "How long to wait for the ECS service to reach stable state, in minutes (default: 30 minutes, max: 6 hours). For CodeDeploy deployments, any wait time configured in the CodeDeploy deployment group will be added to this value."
    required: false
outputs:
  task-definition-arn:
    value: ${{ steps.deploy-task.outputs.task-definition-arn }}
    description: "The ARN of the registered ECS task definition"
runs:
  using: "composite"
  steps:
    - name: Substitute environment variables
      uses: ubuntu-latest
      run: |
        originalfile="${{ inputs.task-definition }}"
        temporaryFile=$(mktemp)
        cp --attributes-only --preserve $originalfile $temporaryFile
        cat $originalfile | envsubst | tee $temporaryFile && mv $temporaryFile $originalfile
    - name: Deploy task
      id: deploy-task
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ inputs.task-definition }}
        service: ${{ inputs.service }}
        cluster: ${{ inputs.cluster }}
        wait-for-service-stability: ${{ inputs.wait-for-service-stability }}
        wait-for-minutes: ${{ inputs.wait-for-minutes }}
